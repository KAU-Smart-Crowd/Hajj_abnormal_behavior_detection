[ped2]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss
LAM_LP = 1
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss
LAM_FLOW = 2

# For gray scale video, such as Ped2 and Ped1, learning rate of G and D star from 1e-4 and 1e-5, respectively.
LRATE_G = [0.0001, 0.00001]
LRATE_G_BOUNDARIES = [7000]

LRATE_D = [0.00001, 0.000001]
LRATE_D_BOUNDARIES = [7000]

[ped1]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss
LAM_LP = 1
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss, LAM_FLOW = 2 is also ok, but LAM_FLOW = 0.01 is slightly better.
LAM_FLOW = 0.01

# For gray scale video, such as Ped2 and Ped1, learning rate of G and D star from 1e-4 and 1e-5, respectively.
LRATE_G = [0.0001, 0.00001]
LRATE_G_BOUNDARIES = [40000]

LRATE_D = [0.00001, 0.000001]
LRATE_D_BOUNDARIES = [40000]

[umn]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss
LAM_LP = 1
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss
LAM_FLOW = 0.01

# For gray scale video, such as Ped2 and Ped1, learning rate of G and D star from 1e-4 and 1e-5, respectively.
LRATE_G = [0.00005, 0.0000005]
LRATE_G_BOUNDARIES = [40000]

LRATE_D = [0.00005, 0.0000005]
LRATE_D_BOUNDARIES = [40000]

[hajj]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss
LAM_LP = 1
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss
LAM_FLOW = 0.01

# For gray scale video, such as Ped2 and Ped1, learning rate of G and D star from 1e-4 and 1e-5, respectively.
LRATE_G = [0.00001, 0.0000005]
LRATE_G_BOUNDARIES = [40000]

LRATE_D = [0.00005, 0.0000005]
LRATE_D_BOUNDARIES = [40000]


[avenue]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss,
# we found in smaller lp is slightly better in avenue, but not too much difference
# LAM_LP = 1 is 84.9, LAM_LP = 0.001 may arrive to 85.1
LAM_LP = 0.001
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss
LAM_FLOW = 2

# For rgb color scale video, such as Ped2 and Ped1, learning rate of G and D star from 2e-4 and 2e-5, respectively.
LRATE_G = [0.0002, 0.00002]
LRATE_G_BOUNDARIES = [100000]

LRATE_D = [0.00002, 0.000002]
LRATE_D_BOUNDARIES = [100000]


[shanghaitech]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss
LAM_LP = 1
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss
LAM_FLOW = 2

# For rgb color scale video, such as Ped2 and Ped1, learning rate of G and D star from 2e-4 and 2e-5, respectively.
LRATE_G = [0.0002, 0.00002]
LRATE_G_BOUNDARIES = [50000]

LRATE_D = [0.00002, 0.000002]
LRATE_D_BOUNDARIES = [50000]


[toydata]
# for lp loss. e.g, 1 or 2 for l1 and l2 loss, respectively)
L_NUM = 2
# the power to which each gradient term is raised in GDL loss
ALPHA_NUM = 1
# the percentage of the adversarial loss to use in the combined loss
LAM_ADV = 0.05
# the percentage of the lp loss to use in the combined loss
LAM_LP = 1
# the percentage of the GDL loss to use in the combined loss
LAM_GDL = 1
# the percentage of the different frame loss
LAM_FLOW = 2

LRATE_G = [0.0002, 0.00002]
LRATE_G_BOUNDARIES = [5000]

LRATE_D = [0.00002, 0.000002]
LRATE_D_BOUNDARIES = [5000]
